// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  // username String? @unique
  email String? @unique
  image String?
  hashedPassword String?
  emailVerified DateTime? 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  conversationsIds String[] @db.ObjectId
  conversation Conversation[] @relation( fields: [conversationsIds] , references: [id]  )
  
  
  seenMessageIds String[] @db.ObjectId
  seenMessages Message[] @relation("seen", fields: [seenMessageIds] , references:[id])

  messages Message[]
  accounts Account[]
}

model Account{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.String
  access_token String? @db.String
  expires_at Int?
  token_type String? 
  scope String?
  id_token String? @db.String
  session_state String? 

  user User @relation(fields: [userId] , references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])

}

model Conversation{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  lastMessageAt DateTime @default(now())
  name String?
  isGroup Boolean?

  messagesIds String[]  @db.ObjectId
  messages Message[] 

  usersIds String[] @db.ObjectId 
  users User[] @relation( fields: [usersIds] , references: [id]  )
}

model Message{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  body String?
  image String?
  createdAt DateTime @default(now())

  seenIds String[] @db.ObjectId
  seen User[] @relation("seen", fields: [seenIds], references: [id])

  conversationId String @db.ObjectId
  conversations Conversation @relation(fields: [conversationId], references: [id])

  senderId String @db.ObjectId
  sender User @relation(fields: [senderId], references:[id], onDelete:Cascade)
}  